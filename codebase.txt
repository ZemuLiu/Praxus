# Praxus Project Structure
=======================

## Root Configuration Files
------------------------
├── components.json          # UI components configuration
├── eslint.config.js        # ESLint configuration
├── postcss.config.js       # PostCSS configuration
├── tailwind.config.js      # Tailwind CSS configuration
├── tsconfig.json          # TypeScript configuration
├── tsconfig.node.json     # Node-specific TypeScript config
├── vite.config.ts         # Vite bundler configuration
├── package.json           # Dependencies and scripts

## Application Entry Points
------------------------
├── index.html            # Main HTML entry point
├── main.js              # Electron main process
├── preload.js           # Electron preload script

## Source Code (/src)
------------------
├── App.tsx              # Root React component
├── main.tsx            # React entry point
├── index.css           # Global styles and Tailwind directives

## Components Directory
--------------------
├── components/
│   ├── ai-chat-interface.tsx    # AI Chat implementation
│   ├── analytics-dashboard.tsx  # Analytics & statistics
│   ├── background-paths.tsx     # Animated backgrounds
│   ├── praxus-desktop.tsx      # Main desktop container
│   ├── praxus-interface.tsx    # UI shell
│   ├── settings-pages.tsx      # Settings UI
│   └── ui/
│       └── button.tsx          # Shared button component

## Library Code
------------
├── lib/
│   ├── ipc-bridge.ts          # Electron IPC communication
│   └── utils.ts               # Utility functions

## Assets
-------
├── assets/
│   └── react.svg             # React logo
├── public/
│   └── vite.svg             # Vite logo

## Key Features
------------
1. Electron Integration
   - IPC communication
   - Window management
   - Native system integration

2. Frontend Framework
   - React with TypeScript
   - Vite for bundling
   - TailwindCSS for styling
   - Framer Motion for animations

3. Development Tools
   - ESLint for linting
   - TypeScript for type safety
   - PostCSS for CSS processing
   - Vite for development server

4. Backend Integration
   - Python AI service
   - Electron IPC bridge
   - Data persistence

## Tech Stack
----------
- Electron
- React
- TypeScript
- TailwindCSS
- Framer Motion
- Python (AI backend)
- Vite
